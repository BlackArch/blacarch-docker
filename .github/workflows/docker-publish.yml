name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

  # Run tests for any PRs.
  pull_request:

  schedule:
    - cron: '0 0 * * *'

env:
  NOVNC_IMG: novnc
  BASE_DEVEL_IMG: base-devel
  LATEST_IMG: latest
  BASE_IMG: base

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest
    container:
      image: blackarchlinux/blackarch:base-devel

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          sudo pacman -Sy --noconfirm --needed make docker devtools fakeroot fakechroot
          make blackarch-base
          make blackarch-base-devel
          docker build ./output/ --file Dockerfile.blackarch-base --tag $BASE_IMG
          docker build ./output/ --file Dockerfile.blackarch-base-devel --tag $BASE_DEVEL_IMG
          docker build ./blackarch-novnc --file ./blackarch-novnc/Dockerfile --tag $NOVNC_IMG
          

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    container:
      image: blackarchlinux/blackarch:base-devel
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      
      - name: Install dependencies
        run: sudo pacman -Sy --noconfirm make docker devtools fakeroot fakechroot

      - name: Build base
        run: |
          make blackarch-base 
          docker build ./output/ --file Dockerfile.blackarch-base --tag $BASE_IMG
          docker build ./output/ --file Dockerfile.blackarch-base --tag $LATEST_IMG
        
      - name: Build base-devel
        run: |
          make blackarch-base-devel
          docker build ./output/ --file Dockerfile.blackarch-base-devel --tag $BASE_DEVEL_IMG

      - name: Build novnc
        run: |
          docker build ./blackarch-novnc --file ./blackarch-novnc/Dockerfile --tag $NOVNC_IMG

      - name: Log into registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
          echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          NOVNC_ID=docker.pkg.github.com/${{ github.repository }}/$NOVNC_IMG
          BASE_ID=docker.pkg.github.com/${{ github.repository }}/$BASE_IMG
          BASE_DEVEL_ID=docker.pkg.github.com/${{ github.repository }}/$BASE_DEVEL_IMG
          LATEST_ID=docker.pkg.github.com/${{ github.repository }}/$LATEST_IMG

          # Change all uppercase to lowercase
          NOVNC_ID=$(echo $NONVC_ID | tr '[A-Z]' '[a-z]')
          BASE_ID=$(echo $BASE_ID | tr '[A-Z]' '[a-z]')
          BASE_DEVEL_ID=$(echo $BASE_DEVEL_ID | tr '[A-Z]' '[a-z]')
          LATEST_ID=$(echo $LATEST_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo NOVNC_ID=$NOVNC_ID
          echo BASE_ID=$BASE_ID
          echo BASE_DEVEL_ID=$BASE_DEVEL_ID
          echo LATEST_ID=$LATEST_ID
          echo VERSION=$VERSION

          docker tag $NOVNC_IMG $NOVNC_ID:$VERSION
          docker push $NOVNC_ID:$VERSION
          
          docker tag $BASE_IMG $BASE_ID:$VERSION
          docker push $BASE_ID:$VERSION
          
          docker tag $BASE_DEVEL_IMG $BASE_DEVEL_ID:$VERSION
          docker push $BASE_DEVEL_ID:$VERSION
          
          docker tag $LATEST_IMG $LATEST_ID:$VERSION
          docker push $LATEST_ID:$VERSION
